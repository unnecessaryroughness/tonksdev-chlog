TODO:
======

BUGS
    * (none)
        
USERS
    * (none)

UI FRAMEWORK
    * Style login screen
    
    * Javascript improvements
        + Data entry form field validation 
        + jQuery Confirmation dialog boxes (for delete, log out, etc.)

ADMINISTER LISTS
    SYMPTOMS
        UI
            + Allow re-sorting of symptoms
            + Allow hiding of symptoms
            + Styling
    
        Classes
            + Allow addition of a new symptom

        >> Remove temporary disabling of user checking in getSymptomsList    
            
    TRIGGERS
        Should work the same as the Symptoms list. Try to find ways of reusing code.
        
    SIDE EFFECTS
        Should work the same as the Symptoms list. Try to find ways of reusing code.
        
    TREATMENTS
        Should work the same as the Symptoms list. Try to find ways of reusing code.
        
    ATTACK WAVES
        - investigate the small inline menus found in this article: 
            http://www.sitepoint.com/11-best-jquery-charting-libraries/
    
    * Mega Menu
        + different colours for each section? 
        + icons on the menus?
        + descriptions under the menu items (in a smaller font)
       
    
SECURITY
    * (none)


CLASSES
    * Make a superclass for the controllers
    * Make a container class for lookup lists
    
USER
    * Make "gravatar" a switchable option, off by default


PENDING PRODUCTION DATABASE CHANGES
    + (none)
    

CORE APP FUNCTIONALITY
    * To be determined. Need to plan this out offline.
    
    
jS flipRecords...

<html>
<head>
    <title>jsReorder test</title>
    <script type="text/javascript" src="https://www.avivaworld.com/sites/StrategyArchitecture/_layouts/1033/Aviva.OneIntranet/jquery-1.4.4.min.js"></script>
</head>
</html>

<body>
    <div id="divBody"></div>
</body>


<script language="javascript">

    var jso = {"symptoms": [
                    {"sequence": 1, "symptomid": 101, "description": "symptom one", "sortorder": 2, "hidden": 0},
                    {"sequence": 2, "symptomid": 102, "description": "symptom two", "sortorder": 3, "hidden": 0},
                    {"sequence": 3, "symptomid": 103, "description": "symptom three", "sortorder": 1, "hidden": 0},
            ]};
    
    $(function(){
        
        displayRecords();
        
    });
    
    function displayRecords(){
        $("#divBody").html("");
        
        for (i=0; i<jso.symptoms.length; i++) {
            $("#divBody").append(jso.symptoms[i].description);
            $("#divBody").append("<button onclick='refreshRecords(" + (i>0 ? i-1 : 0) + ", " + i + ")'>Up</button>");
            $("#divBody").append("<button onclick='refreshRecords(" + i + ", " + (i+1 < jso.symptoms.length ? i+1 : i) + ")'>Down</button>");
            $("#divBody").append("<br>");
        }
    }
    
    
    function refreshRecords(r_a, r_b) {
                
        if (flipRecords(r_a, r_b)) {
            displayRecords();   
        }
    }
    
    
    function flipRecords(r_a, r_b) {
        
        if (r_b - r_a != 1) {
            return false;
        }
        
        jso.symptoms.splice(r_a, 0, jso.symptoms[r_b]);
        jso.symptoms.splice(r_b+1, 1);
        
        return true;
    }
    
    //notes: 
    /*
        maintain the JSO in a hidden field value so it will find its way back to the controller via $_POST.
        On receipt in the controller, cycle the JSON object updating the sort order of each object in the cached
        version of the symptomlist.
    */
    
</script>




    
